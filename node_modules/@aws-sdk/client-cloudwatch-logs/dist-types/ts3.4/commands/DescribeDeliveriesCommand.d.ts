import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CloudWatchLogsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CloudWatchLogsClient";
import {
  DescribeDeliveriesRequest,
  DescribeDeliveriesResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DescribeDeliveriesCommandInput
  extends DescribeDeliveriesRequest {}
export interface DescribeDeliveriesCommandOutput
  extends DescribeDeliveriesResponse,
    __MetadataBearer {}
export declare class DescribeDeliveriesCommand extends $Command<
  DescribeDeliveriesCommandInput,
  DescribeDeliveriesCommandOutput,
  CloudWatchLogsClientResolvedConfig
> {
  readonly input: DescribeDeliveriesCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeDeliveriesCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CloudWatchLogsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeDeliveriesCommandInput, DescribeDeliveriesCommandOutput>;
  private serialize;
  private deserialize;
}
